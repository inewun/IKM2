#include <iostream>
#include "algorithms.h"

using namespace std;

int main() {
    VectorStack stacks = readStacks(); // Чтение начального состояния стеков из входных данных
    int n = stacks.size();             // Получает количество стеков

    // Если стеков меньше 3, завершает программу (для работы нужно минимум 3 стека)
    if (n < 3) return 0;

    // Основной алгоритм сортировки
    for (int i = 0; i + 2 < n; ++i) {
        // Слияние и сортировка двух соседних стеков (i и i+1) в третий (i+2)
        mergeAndSort(stacks, i, i + 1, i + 2);

        // Распределение элементов из стека i+2 по "своим" стекам
        distribute(i + 2, stacks);
    }

    // Вывод результата
    for (int i = 0; i < n; ++i) {
        Vector temp;  // Временный вектор для хранения элементов стека

        // Переносит все элементы из стека во временный вектор (при этом порядок элементов инвертируется)
        while (!stacks[i].empty()) {
            temp.push_back(stacks[i].top());  // Берет верхний элемент
            stacks[i].pop();                  // Удаляет его из стека
        }

        // Выводит элементы стека в исходном порядке (снизу-вверх)
        for (int j = temp.size() - 1; j >= 0; --j)
            cout << ' ' << temp[j];  // Элементы выводятся в обратном порядке вектора

        cout << '\n';  // Переход на новую строку для следующего стека
    }

    return 0;  // Завершение программы
}